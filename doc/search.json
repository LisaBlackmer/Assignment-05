[
  {
    "objectID": "table.html",
    "href": "table.html",
    "title": "GDP Correlation Analysis",
    "section": "",
    "text": "The goal of this project is to examine the correlation between GDP per capita and three different variables: adult literacy rates, life expectancy, and measles immunisation rate. First I will run the correlation analysis for each variable. The data comes from the World Bank’s World Development Indicators (worldbank2022?). Code is created with the help of GitCopilot (copilot?).\n\nsetwd(\"/Users/Lisa/Desktop/QTM/assignment5\")\nlibrary(readr)\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nwdi &lt;- read_csv(\"wdi.csv\")\n\nRows: 217 Columns: 14\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): country\ndbl (13): inflation_rate, exports_gdp_share, gdp_growth_rate, gdp_per_capita...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Filter for rows with both gdp_per_capita and adult_literacy_rate\nwdi_filtered &lt;- subset(wdi, !is.na(gdp_per_capita) & !is.na(adult_literacy_rate))\n\n# GDP and Adult Literacy Correlation\ncor_literacy &lt;- cor.test(\n  wdi$gdp_per_capita, wdi$adult_literacy_rate,\n  use = \"complete.obs\", method = \"pearson\"\n)\n\n# Filter for rows with both gdp_per_capita and Life Expectancy\nwdi_filtered &lt;- subset(wdi, !is.na(gdp_per_capita) & !is.na(life_expectancy))\n\n# GDP and Life Expectancy\ncor_life &lt;- cor.test(\n  wdi$gdp_per_capita, wdi$life_expectancy,\n  use = \"complete.obs\", method = \"pearson\"\n)\n\n# Remove rows with missing GDP per capita or  measles immunisation rate data\nwdi_filtered &lt;- subset(wdi, !is.na(gdp_per_capita) & !is.na(measles_immunisation_rate))\n\n# GDP and Measles Immunisation Rate\ncor_immunisation &lt;- cor.test(\n  wdi$gdp_per_capita, wdi$measles_immunisation_rate,\n  use = \"complete.obs\", method = \"pearson\"\n)\n\n# Create summary table\ncor_table &lt;- data.frame(\n  Comparison = c(\n    \"GDP per Capita vs. Adult Literacy Rate\",\n    \"GDP per Capita vs. Life Expectancy\",\n    \"GDP per Capita vs. Measles Immunisation Rate\"\n  ),\n  Correlation = c(\n    round(cor_literacy$estimate, 3),\n    round(cor_life$estimate, 3),\n    round(cor_immunisation$estimate, 3)\n  ),\n  P_Value = c(\n    signif(cor_literacy$p.value, 3),\n    signif(cor_life$p.value, 3),\n    signif(cor_immunisation$p.value, 3)\n  )\n)\n\n# Display the table\nknitr::kable(cor_table, caption = \"Summary of Correlation Analyses\")\n\n\nSummary of Correlation Analyses\n\n\nComparison\nCorrelation\nP_Value\n\n\n\n\nGDP per Capita vs. Adult Literacy Rate\n0.425\n0.002870\n\n\nGDP per Capita vs. Life Expectancy\n0.639\n0.000000\n\n\nGDP per Capita vs. Measles Immunisation Rate\n0.314\n0.000013\n\n\n\n\n\n\nInterpretation\nAll three variables are positivly correlated with GDP. Of all the variables, life expectancy has the strongest and most significant correlation with GDP (Figure 1). Adult literacy has the least significant, but second strongest correlation (Figure 2). Measles immunisation rate has the weakest correlation with GDP (Figure 3).\n\n\nFigure 1\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\nScatter plot of GDP per Capita vs. Life Expectancy\n\n\n\n\n\n\nFigure 2\n\n\nWarning: Removed 139 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\nScatter plot of GDP per Capita vs. Adult Literacy Rate\n\n\n\n\n\n\nFigure 3\n\n\n\n\n\nBar plot of GDP per Capita and Measles Immunisation Rate"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Assignment 05 - Literate Programming with Quarto",
    "section": "",
    "text": "This website presents a brief analysis of data from the World Development Indicators dataset (https://databank.worldbank.org/source/world-development-indicators).\nThe analysis includes how GDP impacts on adult literacy rates, measles immunisation rates, and life expectancy\nUse the navigation bar above to explore the different analyses."
  },
  {
    "objectID": "05-assignment - Lisa Blackmer-Raynolds.html",
    "href": "05-assignment - Lisa Blackmer-Raynolds.html",
    "title": "QTM 350: Data Science Computing",
    "section": "",
    "text": "Assignment 05 - Literate Programming with Quarto\n\n\nDue 4 June 2025\n\n\nLisa Blackmer-Raynolds\n\n\nInstructions\nIn this assignment, you will demonstrate your proficiency with Quarto by creating data science reports and presentations. You will analyse a sample of the World Development Indicators dataset, focusing on one year (2022) and 14 variables. Your task involves performing data analysis, generating visualisations, and producing reproducible documents in multiple formats.\nPlease write a README.md file that includes the URL of the repository you create, along with the URLs of the HTML report and slides published on GitHub Pages or GitHack (not the raw files in your repository). The resulting PDF should be stored in the repository, as should all the .qmd files.\n\n\nData\nThe sample dataset is provided in the file wdi.csv. The dataset is available in our GitHub repository. You can also create the dataset by running the Python code below.\n\n# Install the necessary libraries\n# pip install pandas\n# pip install wbgapi\n\n# Import the libraries\nimport pandas as pd\nimport wbgapi as wb\n\n\n# Define the indicators to download\nindicators = {\n    'gdp_per_capita': 'NY.GDP.PCAP.CD',\n    'gdp_growth_rate': 'NY.GDP.MKTP.KD.ZG',\n    'inflation_rate': 'FP.CPI.TOTL.ZG',\n    'unemployment_rate': 'SL.UEM.TOTL.ZS',\n    'total_population': 'SP.POP.TOTL',\n    'life_expectancy': 'SP.DYN.LE00.IN',\n    'adult_literacy_rate': 'SE.ADT.LITR.ZS',\n    'income_inequality': 'SI.POV.GINI',\n    'health_expenditure_gdp_share': 'SH.XPD.CHEX.GD.ZS',\n    'measles_immunisation_rate': 'SH.IMM.MEAS',\n    'education_expenditure_gdp_share': 'SE.XPD.TOTL.GD.ZS',\n    'primary_school_enrolment_rate': 'SE.PRM.ENRR',\n    'exports_gdp_share': 'NE.EXP.GNFS.ZS'\n}\n\n# Get the list of country codes for the \"World\" region\ncountry_codes = wb.region.members('WLD')\n\n# Download data for countries only in 2022\ndf = wb.data.DataFrame(indicators.values(), economy=country_codes, time=2022, skipBlanks=True, labels=True).reset_index()\n\n# Delete the 'economy' column\ndf = df.drop(columns=['economy'], errors='ignore')\n\n# Create a reversed dictionary mapping indicator codes to names\n# Rename the columns and convert all names to lowercase\ndf.rename(columns=lambda x: {v: k for k, v in indicators.items()}.get(x, x).lower(), inplace=True)\n\n# Sort 'country' in ascending order\ndf = df.sort_values('country', ascending=True)\n\n# Reset the index after sorting\ndf = df.reset_index(drop=True)\n\n# Display the number of rows and columns\nprint(df.shape)\n\n# Display the first few rows of the data\nprint(df.head(3))\n\n# Save the data to a CSV file\ndf.to_csv('wdi.csv', index=False)\n\n(217, 14)\n       country  inflation_rate  exports_gdp_share  gdp_growth_rate  \\\n0  Afghanistan             NaN          18.380042        -6.240172   \n1      Albania        6.725203          37.395422         4.856402   \n2      Algeria        9.265516          31.446856         3.600000   \n\n   gdp_per_capita  adult_literacy_rate  primary_school_enrolment_rate  \\\n0      352.603733                  NaN                            NaN   \n1     6810.114041                 98.5                      95.606712   \n2     5023.252932                  NaN                     108.343933   \n\n   education_expenditure_gdp_share  measles_immunisation_rate  \\\n0                              NaN                       68.0   \n1                          2.74931                       86.0   \n2                              NaN                       79.0   \n\n   health_expenditure_gdp_share  income_inequality  unemployment_rate  \\\n0                           NaN                NaN             14.100   \n1                           NaN                NaN             11.588   \n2                           NaN                NaN             12.437   \n\n   life_expectancy  total_population  \n0           62.879        41128771.0  \n1           76.833         2777689.0  \n2           77.129        44903225.0  \n\n\n\n\nTasks\n\nPlease initialise a new .qmd file with an appropriate YAML header. Include metadata such as title, author, date, and specify the output format as HTML and PDF.\n\nquarto create-project –type website .\n\nLoad the dataset using your preferred programming language (R or Python).\nConduct exploratory data analysis on at least three indicators of your choice. Summarise your findings in markdown sections. Show your code and results.\nCreate at least two different types of plots (e.g., bar chart, scatter plot) to represent your analysis. Use Quarto code chunks to embed these visualisations. Add a title and axis labels to each plot. Use Quarto to include a caption and a reference to the source of the data. Hide your code in the final document.\nConstruct a table that highlights some key statistics from your analysis. Ensure the table is well-formatted and included in the report.\nInclude cross-references to your figures and tables within the text. Demonstrate proper labeling and referencing techniques.\nAdd a bibliography using BibTeX (.bib). Cite at least two sources related to your analysis.\nCreate a new .qmd file configured for revealjs output. Include a title slide, a few content slides, and a concluding slide.\nIncorporate your analysis and visualisations from the report into the presentation.\nCustomise the presentation theme and incorporate at least one transition effect between slides.\nRender your report and presentation to HTML, PDF, and Revealjs (HTML) formats.\nUse Git to manage your project and create a repository on GitHub. Submit the link to your repository on Canvas.\nSet up GitHub Pages (preferably) or use GitHack to host your HTML report and presentation. Add the links of the published pages to your README.md file. Do not forget to include the PDF report and the .qmd files in your repository.\n\n\n\nBonus Questions\n\nDevelop an interactive dashboard within your report using Quarto’s dashboard features. Incorporate dynamic filters or widgets.\nConfigure automated rendering of your report using Quarto’s command-line interface, possibly integrating with GitHub Actions for continuous integration."
  }
]